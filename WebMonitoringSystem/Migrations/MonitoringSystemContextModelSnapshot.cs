// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebMonitoringSystem.Data;

namespace WebMonitoringSystem.Migrations
{
    [DbContext(typeof(MonitoringSystemContext))]
    partial class MonitoringSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("WebMonitoringSystem.Models.BasicParameter", b =>
                {
                    b.Property<int>("BasicParameterID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Acronym");

                    b.Property<string>("DataRange");

                    b.Property<string>("DataSource");

                    b.Property<int>("PGL");

                    b.Property<int>("PGN");

                    b.Property<string>("SPNName");

                    b.Property<string>("SPNNameRu");

                    b.HasKey("BasicParameterID");

                    b.ToTable("BasicParameter");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Parameter", b =>
                {
                    b.Property<int>("ParameterID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BasicParameterID");

                    b.Property<DateTime>("BasicParameterTimeValue");

                    b.Property<int>("BasicParameterValue");

                    b.Property<int>("VehicleID");

                    b.HasKey("ParameterID");

                    b.HasIndex("BasicParameterID");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Route", b =>
                {
                    b.Property<int>("RouteID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CoordinateLatitude");

                    b.Property<double>("CoordinateLongitude");

                    b.Property<int>("VehicleID");

                    b.HasKey("RouteID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserLogin");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.Property<string>("UserPhone");

                    b.Property<int>("UserRole");

                    b.Property<string>("UserSurname");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.UserToRole", b =>
                {
                    b.Property<int>("UserToRoleID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoleID");

                    b.Property<int>("UserID");

                    b.HasKey("UserToRoleID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserToRole");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Mark");

                    b.Property<string>("ModelType");

                    b.Property<string>("OverallDimensions");

                    b.Property<int>("UsefulVolume");

                    b.Property<string>("VehicleType");

                    b.Property<int>("YearIssue");

                    b.Property<int>("СarryingСapacity");

                    b.HasKey("VehicleID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.VehicleGroup", b =>
                {
                    b.Property<int>("VehicleGroupID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("VehicleGroupName");

                    b.HasKey("VehicleGroupID");

                    b.ToTable("VehicleGroup");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.VehicleToVehicleGroup", b =>
                {
                    b.Property<int>("VehicleToVehicleGroupID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("VehicleGroupID");

                    b.Property<int>("VehicleID");

                    b.HasKey("VehicleToVehicleGroupID");

                    b.HasIndex("VehicleGroupID");

                    b.HasIndex("VehicleID");

                    b.ToTable("VehicleToVehicleGroup");
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Parameter", b =>
                {
                    b.HasOne("WebMonitoringSystem.Models.BasicParameter", "BasicParameter")
                        .WithMany()
                        .HasForeignKey("BasicParameterID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.Route", b =>
                {
                    b.HasOne("WebMonitoringSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.UserToRole", b =>
                {
                    b.HasOne("WebMonitoringSystem.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebMonitoringSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebMonitoringSystem.Models.VehicleToVehicleGroup", b =>
                {
                    b.HasOne("WebMonitoringSystem.Models.VehicleGroup", "VehicleGroup")
                        .WithMany()
                        .HasForeignKey("VehicleGroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebMonitoringSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
